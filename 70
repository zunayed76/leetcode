//bottom up dynamic programming
class Solution {
public:
    unordered_map<int, int> um;
    int climbStairs(int n) {
        
        return backtrack(0,n);;
    }
    int backtrack(int depth, int n)
    {
        if(depth == n)
        {
            return 1;
        }
        if(depth > n)
            return 0;
        if(um.find(depth) != um.end())
            return um[depth];
            
        um[depth] = backtrack(depth+1, n)+backtrack(depth+2, n);
        return um[depth];;
        
    }       
    
};
