class Solution {
public:
    unordered_map<char, string> digcom;
    vector<string> sol;
    int l;
    vector<string> letterCombinations(string digits) {
        digcom['0'] = "";digcom['1'] = "";digcom['2'] = "abc";digcom['3'] = "def";digcom['4'] = "ghi";digcom['5'] = "jkl";
        digcom['6'] = "mno";digcom['7'] = "pqrs";digcom['8'] = "tuv";digcom['9'] = "wxyz"; 
        
        
        l = digits.length();
        if(l == 0)
            return sol;
        vector<string> v;
        for(int i=0;i<digcom[digits[0]].length();i++)
        {
            string temp = "";
            temp += digcom[digits[0]][i];
            v.push_back(temp);
        }
        comb(digits,v,1);
        return sol;
    }
    
    void comb(string digits, vector<string>& v, int depth)
    {
        if(depth == l)
        {
            sol = v;
            return;
        }
        vector<string> t;
        
        for(int i=0;i<v.size();i++)
        {
            for(int j=0;j<digcom[digits[depth]].length();j++)
            {
                string temp = v[i];
                temp += digcom[digits[depth]][j];
                t.push_back(temp);
                
            }
        }
        comb(digits, t, depth+1);
        return;
    }
    
};
